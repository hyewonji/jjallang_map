{"version":3,"sources":["components/Button.jsx","components/KakaoMap.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchButton","styled","div","Button","onClick","kakao","window","KakaoMap","useState","latitude","longitude","coords","setCoords","location","setLocation","useEffect","navigator","geolocation","getCurrentPosition","data","console","log","container","document","getElementById","options","center","maps","LatLng","level","map","Map","ps","services","Places","geocoder","Geocoder","infowindow","InfoWindow","zIndex","displayMarker","place","marker","Marker","position","y","x","event","addListener","setContent","place_name","open","callback","coord2RegionCode","getLng","getLat","searchAddrFromCoords","getCenter","result","status","Status","OK","infoDiv","i","length","region_type","innerHTML","address_name","address","split","keywordSearch","pagination","bounds","LatLngBounds","extend","panBy","La","Ma","id","style","width","height","className","backgroundColor","top","left","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.876a2d4b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SearchButton = styled.div`\r\n    position: absolute;\r\n    top: 20px;\r\n    right: 20px;\r\n    padding: 5px 10px;\r\n    z-index: 10;\r\n    border: solid 1px #828282;\r\n    color: #525252;\r\n    border-radius: 10px;\r\n    background-color: #fcfcfc;\r\n`;\r\n\r\nconst Button = ({ onClick }) => {\r\n    return <SearchButton onClick={onClick}>현 지도에서 검색</SearchButton>;\r\n};\r\n\r\nexport default Button;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nconst { kakao } = window;\r\n\r\nfunction KakaoMap() {\r\n    const [coords, setCoords] = useState({\r\n        latitude: 33.450701,\r\n        longitude: 126.570667,\r\n    });\r\n    const [location, setLocation] = useState(\"\");\r\n\r\n    /* 현재 위치 받아오기 */\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((data) => {\r\n            setCoords({\r\n                ...coords,\r\n                latitude: data.coords.latitude,\r\n                longitude: data.coords.longitude,\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    /* Kakao 지도 API 활용 */\r\n    useEffect(() => {\r\n        console.log(kakao);\r\n        const container = document.getElementById(\"map\");\r\n        const options = {\r\n            center: new kakao.maps.LatLng(coords.latitude, coords.longitude),\r\n            level: 3,\r\n        };\r\n        const map = new kakao.maps.Map(container, options); // 지도 생성\r\n        const ps = new kakao.maps.services.Places(); // 장소 검색 객체 생성\r\n        const geocoder = new kakao.maps.services.Geocoder(); // 주소-좌표 변환 객체 생성\r\n        const infowindow = new kakao.maps.InfoWindow({ zIndex: 1 }); // 클릭한 위치에 대한 주소 표시\r\n\r\n        searchAddrFromCoords(map.getCenter(), displayCenterInfo); //현재 지도 중심좌표 주소 표시\r\n        ps.keywordSearch(`${location} 코인 노래방`, placesSearchCB); // 키워드로 장소 검색\r\n        map.panBy(100, 50);\r\n\r\n        kakao.maps.event.addListener(map, \"dragend\", function () {\r\n            const center = map.getCenter();\r\n            console.log(center.La, center.Ma);\r\n            // setCoords({\r\n            //     ...coords,\r\n            //     latitude: center.La,\r\n            //     longitude: center.Ma,\r\n            // });\r\n        });\r\n\r\n        // 좌표로 행정동 주소 정보를 표시하는 함수\r\n        function searchAddrFromCoords(coords, callback) {\r\n            geocoder.coord2RegionCode(\r\n                coords.getLng(),\r\n                coords.getLat(),\r\n                callback\r\n            );\r\n        }\r\n\r\n        // 지도 중심좌표에 대한 주소정보 표시하는 함수\r\n        function displayCenterInfo(result, status) {\r\n            if (status === kakao.maps.services.Status.OK) {\r\n                const infoDiv = document.getElementById(\"centerAddr\");\r\n                for (var i = 0; i < result.length; i++) {\r\n                    // 행정동의 region_type 값은 'H' 이므로\r\n                    if (result[i].region_type === \"H\") {\r\n                        infoDiv.innerHTML = result[i].address_name;\r\n                        const address = result[i].address_name.split(\" \");\r\n                        setLocation(address[2]);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // 키워드 검색 완료 시 호출되는 콜백함수\r\n        function placesSearchCB(data, status, pagination) {\r\n            if (status === kakao.maps.services.Status.OK) {\r\n                var bounds = new kakao.maps.LatLngBounds();\r\n\r\n                for (var i = 0; i < data.length; i++) {\r\n                    displayMarker(data[i]);\r\n                    bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\r\n                }\r\n            }\r\n        }\r\n\r\n        // 지도에 마커 표시하는 함수\r\n        function displayMarker(place) {\r\n            var marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: new kakao.maps.LatLng(place.y, place.x),\r\n            });\r\n\r\n            kakao.maps.event.addListener(marker, \"click\", function () {\r\n                infowindow.setContent(\r\n                    '<div style=\"padding:5px;font-size:12px;\">' +\r\n                        place.place_name +\r\n                        \"</div>\"\r\n                );\r\n                infowindow.open(map, marker);\r\n            });\r\n        }\r\n    }, [coords, location]);\r\n\r\n    return (\r\n        <>\r\n            <div id=\"map\" style={{ width: \"100vw\", height: \"100vh\" }} />\r\n            <div\r\n                className=\"hAddr\"\r\n                style={{\r\n                    backgroundColor: \"white\",\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    zIndex: 10,\r\n                }}\r\n            >\r\n                <span className=\"title\">지도중심기준 행정동 주소정보</span>\r\n                <span id=\"centerAddr\"></span>\r\n                <Button>현 지도에서 재검색</Button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default KakaoMap;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport KakaoMap from \"./components/KakaoMap\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <KakaoMap />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}