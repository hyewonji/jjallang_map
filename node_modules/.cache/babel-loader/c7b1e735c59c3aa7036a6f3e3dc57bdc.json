{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wlgpd\\\\Documents\\\\jjallang_map-master\\\\src\\\\components\\\\kakaoMap.jsx\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React, { useEffect, useState } from \"react\"; // import styled from \"styled-components\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction placesSearchCB(data, status, pagination) {\n  if (status === kakao.maps.services.Status.OK) {\n    // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n    // LatLngBounds 객체에 좌표를 추가합니다\n    var bounds = new kakao.maps.LatLngBounds();\n\n    for (var i = 0; i < data.length; i++) {\n      displayMarker(data[i]);\n      bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n    } // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n\n\n    map.setBounds(bounds);\n  }\n}\n\nfunction displayMarker(place) {\n  // 마커를 생성하고 지도에 표시합니다\n  var marker = new kakao.maps.Marker({\n    map: map,\n    position: new kakao.maps.LatLng(place.y, place.x)\n  }); // 마커에 클릭이벤트를 등록합니다\n\n  kakao.maps.event.addListener(marker, \"click\", function () {\n    // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\n    infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + \"</div>\");\n    infowindow.open(map, marker);\n  });\n}\n\nfunction KakaoMap() {\n  _s();\n\n  const [coords, setCoords] = useState({\n    latitude: 33.450701,\n    longitude: 126.570667\n  });\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(data => {\n      setCoords({ ...coords,\n        latitude: data.coords.latitude,\n        longitude: data.coords.longitude\n      });\n    });\n  }, []);\n  useEffect(() => {\n    var infowindow = new kakao.maps.InfoWindow({\n      zIndex: 1\n    });\n    const container = document.getElementById(\"map\");\n    const options = {\n      center: new kakao.maps.LatLng(coords.latitude, coords.longitude),\n      level: 3\n    };\n    const map = new kakao.maps.Map(container, options);\n    const ps = new kakao.maps.services.Places();\n    ps.keywordSearch(\"코인 노래방\", placesSearchCB);\n  }, [coords]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 12\n  }, this);\n}\n\n_s(KakaoMap, \"SXKs7RFXZhzlCoEzdSkO511J+wI=\");\n\n_c = KakaoMap;\nexport default KakaoMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"KakaoMap\");","map":{"version":3,"sources":["C:/Users/wlgpd/Documents/jjallang_map-master/src/components/kakaoMap.jsx"],"names":["React","useEffect","useState","placesSearchCB","data","status","pagination","kakao","maps","services","Status","OK","bounds","LatLngBounds","i","length","displayMarker","extend","LatLng","y","x","map","setBounds","place","marker","Marker","position","event","addListener","infowindow","setContent","place_name","open","KakaoMap","coords","setCoords","latitude","longitude","navigator","geolocation","getCurrentPosition","InfoWindow","zIndex","container","document","getElementById","options","center","level","Map","ps","Places","keywordSearch","width","height"],"mappings":"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","sourcesContent":["/*global kakao*/\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n// import styled from \"styled-components\";\r\n\r\nfunction placesSearchCB(data, status, pagination) {\r\n    if (status === kakao.maps.services.Status.OK) {\r\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n        // LatLngBounds 객체에 좌표를 추가합니다\r\n        var bounds = new kakao.maps.LatLngBounds();\r\n\r\n        for (var i = 0; i < data.length; i++) {\r\n            displayMarker(data[i]);\r\n            bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\r\n        }\r\n\r\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n        map.setBounds(bounds);\r\n    }\r\n}\r\n\r\nfunction displayMarker(place) {\r\n    // 마커를 생성하고 지도에 표시합니다\r\n    var marker = new kakao.maps.Marker({\r\n        map: map,\r\n        position: new kakao.maps.LatLng(place.y, place.x),\r\n    });\r\n\r\n    // 마커에 클릭이벤트를 등록합니다\r\n    kakao.maps.event.addListener(marker, \"click\", function () {\r\n        // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\r\n        infowindow.setContent(\r\n            '<div style=\"padding:5px;font-size:12px;\">' +\r\n                place.place_name +\r\n                \"</div>\"\r\n        );\r\n        infowindow.open(map, marker);\r\n    });\r\n}\r\n\r\nfunction KakaoMap() {\r\n    const [coords, setCoords] = useState({\r\n        latitude: 33.450701,\r\n        longitude: 126.570667,\r\n    });\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((data) => {\r\n            setCoords({\r\n                ...coords,\r\n                latitude: data.coords.latitude,\r\n                longitude: data.coords.longitude,\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        var infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\r\n        const container = document.getElementById(\"map\");\r\n        const options = {\r\n            center: new kakao.maps.LatLng(coords.latitude, coords.longitude),\r\n            level: 3,\r\n        };\r\n        const map = new kakao.maps.Map(container, options);\r\n        const ps = new kakao.maps.services.Places();\r\n        ps.keywordSearch(\"코인 노래방\", placesSearchCB);\r\n    }, [coords]);\r\n\r\n    return <div id=\"map\" style={{ width: \"100vw\", height: \"100vh\" }} />;\r\n}\r\n\r\nexport default KakaoMap;\r\n"]},"metadata":{},"sourceType":"module"}