{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wlgpd\\\\Documents\\\\jjallang_map-master\\\\src\\\\components\\\\kakaoMap.jsx\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React, { useEffect, useState } from \"react\"; // import styled from \"styled-components\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction KakaoMap() {\n  _s();\n\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(data => {\n      setLatitude(data.coords.longitude);\n      setLongitude(data.coords.latitude);\n      console.log(latitude, longitude);\n    });\n  }, []);\n  useEffect(() => {\n    if (latitude && longitude) {\n      console.log(\"yes\");\n    } else {\n      console.log(\"no\");\n    }\n\n    console.log();\n    const container = document.getElementById(\"map\");\n    const options = {\n      center: longitude && latitude ? new kakao.maps.LatLng(latitude, longitude) : new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 3\n    };\n    const map = new kakao.maps.Map(container, options);\n  }, [latitude]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n}\n\n_s(KakaoMap, \"/5vKJItkx0uO/dTexfn3otDTyu8=\");\n\n_c = KakaoMap;\nexport default KakaoMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"KakaoMap\");","map":{"version":3,"sources":["C:/Users/wlgpd/Documents/jjallang_map-master/src/components/kakaoMap.jsx"],"names":["React","useEffect","useState","KakaoMap","latitude","setLatitude","longitude","setLongitude","navigator","geolocation","getCurrentPosition","data","coords","console","log","container","document","getElementById","options","center","kakao","maps","LatLng","level","map","Map","width","height"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,IAAD,IAAU;AAC/CN,MAAAA,WAAW,CAACM,IAAI,CAACC,MAAL,CAAYN,SAAb,CAAX;AACAC,MAAAA,YAAY,CAACI,IAAI,CAACC,MAAL,CAAYR,QAAb,CAAZ;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ,EAAsBE,SAAtB;AACH,KAJD;AAKH,GANQ,EAMN,EANM,CAAT;AAQAL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,QAAQ,IAAIE,SAAhB,EAA2B;AACvBO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH,KAFD,MAEO;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH;;AACDD,IAAAA,OAAO,CAACC,GAAR;AACA,UAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAlB;AACA,UAAMC,OAAO,GAAG;AACZC,MAAAA,MAAM,EACFb,SAAS,IAAIF,QAAb,GACM,IAAIgB,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsBlB,QAAtB,EAAgCE,SAAhC,CADN,GAEM,IAAIc,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsB,SAAtB,EAAiC,UAAjC,CAJE;AAKZC,MAAAA,KAAK,EAAE;AALK,KAAhB;AAOA,UAAMC,GAAG,GAAG,IAAIJ,KAAK,CAACC,IAAN,CAAWI,GAAf,CAAmBV,SAAnB,EAA8BG,OAA9B,CAAZ;AACH,GAhBQ,EAgBN,CAACd,QAAD,CAhBM,CAAT;AAkBA,sBAAO;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,KAAK,EAAE;AAAEsB,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE;AAA1B;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GA/BQxB,Q;;KAAAA,Q;AAiCT,eAAeA,QAAf","sourcesContent":["/*global kakao*/\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n// import styled from \"styled-components\";\r\n\r\nfunction KakaoMap() {\r\n    const [latitude, setLatitude] = useState(null);\r\n    const [longitude, setLongitude] = useState(null);\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((data) => {\r\n            setLatitude(data.coords.longitude);\r\n            setLongitude(data.coords.latitude);\r\n            console.log(latitude, longitude);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (latitude && longitude) {\r\n            console.log(\"yes\");\r\n        } else {\r\n            console.log(\"no\");\r\n        }\r\n        console.log();\r\n        const container = document.getElementById(\"map\");\r\n        const options = {\r\n            center:\r\n                longitude && latitude\r\n                    ? new kakao.maps.LatLng(latitude, longitude)\r\n                    : new kakao.maps.LatLng(33.450701, 126.570667),\r\n            level: 3,\r\n        };\r\n        const map = new kakao.maps.Map(container, options);\r\n    }, [latitude]);\r\n\r\n    return <div id=\"map\" style={{ width: \"100vw\", height: \"100vh\" }} />;\r\n}\r\n\r\nexport default KakaoMap;\r\n"]},"metadata":{},"sourceType":"module"}